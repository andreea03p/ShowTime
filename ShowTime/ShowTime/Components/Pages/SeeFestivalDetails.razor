@page "/festival-details/{FestivalId:int}"
@using ShowTime.BusinessLogic.Abstraction
@using ShowTime.BusinessLogic.Dtos
@inject IFestivalService FestivalService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow-x: hidden;
        background: linear-gradient(135deg, rgba(0,0,0,0.7), rgba(0,0,0,0.4)), url('/images/background.jpg') center/cover;
    }

    .festival-details-container {
        min-height: 100vh;
        width: 100%;
        padding: 0;
        margin: 0;
        position: relative;
        background-attachment: fixed;
        background-repeat: repeat;
        background-size: cover;
        background: linear-gradient(135deg, rgba(0,0,0,0.7), rgba(0,0,0,0.4)), url('/images/background.jpg') center/cover;
    }

    .content-wrapper {
        padding: 20px;
        width: 100%;
        height: 100%;
        max-width: 1200px;
        margin: 0 auto;
    }

    .festival-header {
        background: linear-gradient(135deg, rgba(0,0,0,0.8), rgba(0,0,0,0.6));
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        border: 1px solid rgba(255,255,255,0.2);
        position: relative;
        overflow: hidden;
    }

        .festival-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #3498db, #1abc9c, #3498db);
            background-size: 200% 100%;
            animation: shimmer 2s infinite;
        }

    .festival-hero {
        display: grid;
        grid-template-columns: 300px 1fr;
        gap: 30px;
        align-items: center;
        margin-bottom: 20px;
    }

    .festival-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.3);
    }

    .festival-info h1 {
        color: #3498db;
        font-size: 2.5em;
        margin-bottom: 10px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    }

    .festival-info p {
        color: white;
        font-size: 1.1em;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .festival-info i {
        color: #1abc9c;
        font-size: 1.2em;
    }

    .section-card {
        background: linear-gradient(135deg, rgba(0,0,0,0.8), rgba(0,0,0,0.6));
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        border: 1px solid rgba(255,255,255,0.2);
        justify-content: center;
    }

        .section-card h3 {
            color: #91C8E4;
            margin-bottom: 20px;
            font-weight: 600;
            font-size: 1.5em;
            text-shadow: 1px 1px 2px rgba(255,255,255,0.5);
            border-bottom: 2px solid rgba(255,255,255,0.2);
            padding-bottom: 10px;
            justify-content: center;
        }

    .lineup-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .artist-card {
        background: linear-gradient(135deg, rgba(52,152,219,0.1), rgba(26,188,156,0.1));
        border: 1px solid rgba(255,255,255,0.3);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
    }

        .artist-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(52,152,219,0.3);
            border-color: #3498db;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        justify-items: center;
        margin: 0 auto;
    }

    .artist-card1 {
        aspect-ratio: 1.25 / 1;
        background: linear-gradient(135deg, rgba(52,152,219,0.1), rgba(26,188,156,0.1));
        border: 1px solid rgba(255,255,255,0.3);
        border-radius: 8px;
        padding: 12px;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        max-width: 200px;
        min-width: 150px;
    }

        .artist-card1:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(52,152,219,0.3);
            border-color: #3498db;
        }

    .artist-image {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        margin: 0 auto 15px;
        border: 3px solid #3498db;
        box-shadow: 0 4px 15px rgba(52,152,219,0.3);
    }

    .artist-name {
        color: white;
        font-size: 1.2em;
        font-weight: 600;
        margin-bottom: 8px;
    }

    .artist-genre {
        color: #1abc9c;
        font-style: italic;
        margin-bottom: 10px;
    }

    .performance-info {
        background: rgba(255,255,255,0.1);
        border-radius: 8px;
        padding: 10px;
        margin-top: 10px;
    }

        .performance-info div {
            color: #ecf0f1;
            font-size: 0.9em;
            margin-bottom: 5px;
        }

        .performance-info strong {
            color: #3498db;
        }

    .stages-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 20px;
        justify-content: center;
    }

    .stage-badge {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        padding: 15px;
        border-radius: 10px;
        text-align: center;
        font-weight: 600;
        font-size: 1.1em;
        box-shadow: 0 4px 15px rgba(52,152,219,0.3);
        transition: all 0.3s ease;
    }

        .stage-badge:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(52,152,219,0.4);
        }

    .no-lineup {
        text-align: center;
        color: #ecf0f1;
        font-size: 1.1em;
        padding: 40px;
        background: rgba(255,255,255,0.1);
        border-radius: 10px;
        border: 2px dashed rgba(255,255,255,0.3);
    }

    .btn-custom {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(52,152,219,0.3);
        margin-right: 20px;
        text-decoration: none;
        display: inline-block;
    }

        .btn-custom:hover {
            background: linear-gradient(135deg, #2980b9, #1abc9c);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(52,152,219,0.4);
        }

    .filter-controls {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .filter-select {
        padding: 8px 15px;
        border: 2px solid rgba(255,255,255,0.3);
        border-radius: 8px;
        background: rgba(255,255,255,0.8);
        color: #333;
        min-width: 150px;
    }

        .filter-select:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52,152,219,0.1);
        }

    .day-selector {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        flex-wrap: wrap;
        justify-content: center;
    }

    .day-btn {
        background: rgba(255,255,255,0.2);
        color: white;
        border: 1px solid rgba(255,255,255,0.3);
        padding: 8px 16px;
        border-radius: 20px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .day-btn:hover, .day-btn.active {
            background: linear-gradient(135deg, #3498db, #2980b9);
            border-color: #3498db;
            transform: translateY(-2px);
        }

    @@keyframes shimmer {
        0%

    {
        background-position: -200% 0;
    }

    100% {
        background-position: 200% 0;
    }

    }

    @@media (max-width: 768px) {
        .festival-hero

    {
        grid-template-columns: 1fr;
        text-align: center;
    }

    .festival-image {
        width: 250px;
        margin: 0 auto;
    }

    .lineup-grid {
        grid-template-columns: 1fr;
    }

    }
</style>


<div class="festival-details-container">
    <div class="content-wrapper">

        @if (festival != null)
        {
            <!-- Festival Header -->
            <div class="festival-header">
                <div class="festival-hero">
                    <img src="@festival.SplashArt" alt="@festival.Name" class="festival-image" />
                    <div class="festival-info">
                        <h1>@festival.Name</h1>
                        <p><i class="bi bi-calendar"></i> @festival.StartDate.ToString("MMM dd, yyyy") - @festival.EndDate.ToString("MMM dd, yyyy")</p>
                        <p><i class="bi bi-geo-alt"></i> @festival.Address</p>
                        <p><i class="bi bi-map"></i> see on map </p>
                    </div>
                </div>

                <div style="text-align: center; margin-top: 20px;">
                    <button class="btn-custom" @onclick="GoBack">
                        <i class="bi bi-arrow-left"></i> Back to Festivals
                    </button>
                    <AuthorizeView Roles="Admin">
                        <Authorized Context="authContext">
                    <button class="btn-custom" @onclick="GoToLineup">
                        <i class="bi bi-pen"></i> Edit Lineup
                    </button>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>

            <!-- Stages Section -->
            <div class="section-card">
                <h3><i class="bi bi-speaker"></i> Stages</h3>
                @if (stages.Any())
                {
                    <div class="stages-container">
                        @foreach (var stage in stages)
                        {
                            <div class="stage-badge">
                                @stage
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-lineup">
                        <p>No stages yet.</p>
                    </div>
                }
            </div>

            <!-- Lineup Section -->
            <div class="section-card">
                <h3><i class="bi bi-music-note-list"></i> Festival Lineup</h3>

                @if (lineup.Any())
                {
                    <!-- Filter Controls -->
                    <div class="filter-controls">
                        <select class="filter-select" @onchange="FilterByStage">
                            <option value="">All Stages</option>
                            @foreach (var stage in stages)
                            {
                                <option value="@stage">@stage</option>
                            }
                        </select>
                    </div>

                    <!-- Day Selector -->
                    <div class="day-selector">
                        <button class="day-btn @(selectedDay == null ? "active" : "")" @onclick="() => FilterByDay(null)">
                            All Days
                        </button>
                        @foreach (var day in GetFestivalDays())
                        {
                            <button class="day-btn @(selectedDay?.Date == day.Date ? "active" : "")" @onclick="() => FilterByDay(day)">
                                @day.ToString("MMM dd")
                            </button>
                        }
                    </div>

                    <!-- Artists Grid -->
                    <div class="lineup-grid">
                        @foreach (var lineupEntry in filteredLineup.OrderBy(l => l.StartTime))
                        {
                            <div class="artist-card">
                                <img src="@lineupEntry.Artist.Image" alt="@lineupEntry.Artist.Name" class="artist-image" />
                                <div class="artist-name">@lineupEntry.Artist.Name</div>
                                <div class="artist-genre">@lineupEntry.Artist.Genre</div>
                                <div class="performance-info">
                                    <div><strong>Stage:</strong> @lineupEntry.Stage</div>
                                    <div><strong>Date:</strong> @lineupEntry.StartTime.ToString("MMM dd, yyyy")</div>
                                    <div><strong>Time:</strong> @lineupEntry.StartTime.ToString("HH:mm")</div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-lineup">
                        <i class="bi bi-music-note" style="font-size: 3em; color: #3498db; margin-bottom: 15px;"></i>
                        <p>No artists in the lineup yet.</p>
                        <p style="font-size: 0.9em; margin-top: 10px; opacity: 0.8;">Check back soon for updates!</p>
                    </div>
                }
            </div>

            <!-- Statistics Section -->
            <div class="section-card">
                <h3><i class="bi bi-bar-chart"></i> Festival Statistics</h3>
                <div class="stats-grid">
                    <div class="artist-card1">
                        <div style="font-size: 2em; color: #3498db; margin-bottom: 10px;">
                            <i class="bi bi-people"></i>
                        </div>
                        <div class="artist-name">@lineup.Count</div>
                        <div class="artist-genre">Total Artists</div>
                    </div>
                    <div class="artist-card1">
                        <div style="font-size: 2em; color: #1abc9c; margin-bottom: 10px;">
                            <i class="bi bi-speaker"></i>
                        </div>
                        <div class="artist-name">@stages.Count</div>
                        <div class="artist-genre">Stages</div>
                    </div>
                    <div class="artist-card1">
                        <div style="font-size: 2em; color: #e74c3c; margin-bottom: 10px;">
                            <i class="bi bi-calendar-event"></i>
                        </div>
                        <div class="artist-name">@GetFestivalDuration()</div>
                        <div class="artist-genre">Days</div>
                    </div>
                    <div class="artist-card1">
                        <div style="font-size: 2em; color: #f39c12; margin-bottom: 10px;">
                            <i class="bi bi-music-note-beamed"></i>
                        </div>
                        <div class="artist-name">@GetUniqueGenres()</div>
                        <div class="artist-genre">Genres</div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="section-card">
                <div class="no-lineup">
                    <i class="bi bi-exclamation-triangle" style="font-size: 3em; color: #e74c3c; margin-bottom: 15px;"></i>
                    <p>Festival not found.</p>
                    <button class="btn-custom" @onclick="GoBack" style="margin-top: 15px;">
                        <i class="bi bi-arrow-left"></i> Back to Festivals
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int FestivalId { get; set; }

    private FestivalGetDto? festival;
    private List<LineupGetDto> lineup = new();
    private List<LineupGetDto> filteredLineup = new();
    private List<string> stages = new();
    private DateTime? selectedDay;
    private string selectedStage = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadFestivalData();
    }

    private async Task LoadFestivalData()
    {
        try
        {
            festival = await FestivalService.GetFestivalByIdAsync(FestivalId);
            lineup = await FestivalService.GetCompleteLineupForFestivalAsync(FestivalId);
            stages = await FestivalService.GetStagesForFestivalAsync(FestivalId);
            filteredLineup = lineup;
        }
        catch (Exception)
        {
            festival = null;
        }
    }

    private void FilterByStage(ChangeEventArgs e)
    {
        selectedStage = e.Value?.ToString() ?? "";
        ApplyFilters();
    }

    private void FilterByDay(DateTime? day)
    {
        selectedDay = day;
        ApplyFilters();
    }

    private void ApplyFilters()
    {
        filteredLineup = lineup;

        if (!string.IsNullOrEmpty(selectedStage))
        {
            filteredLineup = filteredLineup.Where(l => l.Stage.Equals(selectedStage, StringComparison.OrdinalIgnoreCase)).ToList();
        }

        if (selectedDay.HasValue)
        {
            filteredLineup = filteredLineup.Where(l => l.StartTime.Date == selectedDay.Value.Date).ToList();
        }

        StateHasChanged();
    }

    private List<DateTime> GetFestivalDays()
    {
        if (festival == null) return new List<DateTime>();

        var days = new List<DateTime>();
        for (var date = festival.StartDate.Date; date <= festival.EndDate.Date; date = date.AddDays(1))
        {
            days.Add(date);
        }
        return days;
    }

    private int GetFestivalDuration()
    {
        if (festival == null) return 0;
        return (festival.EndDate.Date - festival.StartDate.Date).Days + 1;
    }

    private int GetUniqueGenres()
    {
        return lineup.Select(l => l.Artist.Genre).Distinct().Count();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/festivals");
    }

    private void GoToLineup()
    {
        Navigation.NavigateTo("/lineup-management");
    }
}